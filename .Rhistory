}
}
# return
return(cbind(roll = 1:N, draws))
}
# simulate scenario
set.seed(20181031)
N <- 100
draws <- simulate(N, jbns = c(12, 4), switch.val = 4)
# observe results
mycols <- c("darkmagenta", "turquoise")
cols <- ifelse(draws$state == "alice", mycols[1], mycols[3])
ggplot(draws, aes(x = roll, y = obs)) + geom_line()
?depmix()
?depmix
?runif
?fit
fm <- fit(mod, emc = em.control(rand = FALSE))
library(depmixS4)
data(speed)
set.seed(1)
mod <- depmix(response = rt ~ 1, data = speed, nstates = 2, trstart = runif(4))
fm <- fit(mod, emc = em.control(rand = FALSE))
fm
logLik(fm)
summary(fm)
#covariates on transition parameters
mod <- depmix(rt ~ 1, data = speed, nstates = 2, family = gaussian(),
transition = ~ scale(Pacc), instart = runif(2))
fm <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
fm <- fit(mod, verbose = TRUE, emc = em.control(rand = FALSE))
summary(fm, which = "transition")
summary(fm)
#Multivariate data
mod <- depmix(list(rt ~ 1, corr ~ 1), data = speed, nstates = 2,
family = list(gaussian(), multinomial("identity")),
transition = ~scale(Pacc), instart = runif(2))
fm <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
summary(fm, which = "response")
set.seed(1)
#Multivariate data
mod <- depmix(list(rt ~ 1, corr ~ 1), data = speed, nstates = 2,
family = list(gaussian(), multinomial("identity")),
transition = ~scale(Pacc), instart = runif(2))
fm <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
summary(fm, which = "response")
#covariates on transition parameters
set.seed(1)
mod <- depmix(rt ~ 1, data = speed, nstates = 2, family = gaussian(),
transition = ~ scale(Pacc), instart = runif(2))
fm <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
summary(fm, which = "transition")
#Multivariate data
set.seed(1)
mod <- depmix(list(rt ~ 1, corr ~ 1), data = speed, nstates = 2,
family = list(gaussian(), multinomial("identity")),
transition = ~scale(Pacc), instart = runif(2))
fm <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
summary(fm, which = "response")
#fixing and constraining parameters
#first, fit a model without constraints
trst <- c(0.9, 0.1, 0, 0, 0.1, 0.9, 0, 0)
mod <- depmix(list(rt ~ 1, corr ~ 1), data = speed, transition = ~ Pacc,
nstates = 2, family = list(gaussian(), multinomial("identity")),
trstart = trst, instart = c(0.99, 0.01))
fm1 <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
pars <- c(unlist(getpars(fm1)))
pars
pars[6] <- pars[10] <- 11
pars
pars[1] <- 0
pars[2] <- 1
pars
pars[13] <- pars[14] <- 0.5
pars
fm1 <- setpars(mod, pars)
conpat <- c(0, 0, rep(c(0, 1), 4), 1, 1, 0, 0, 1, 1, 1, 1)
conpat[6] <- conpat[10] <- 2
fm2 <- fit(fm1, equal = conpat)
summary(fm2)
#adding covariates on the prior probabilities
data("ballance")
#adding covariates on the prior probabilities
data(ballance)
#adding covariates on the prior probabilities
data("balance")
set.seed(1)
mod <- mix(list(d1 ~ 1, d2 ~ 1, d3 ~ 1, d4 ~ 1), data = balance,
nstates = 3, family = list(multinomial("identity"),
multinomial("identity"),
multinomial("identity"),
multinomial("identity")),
respstart = runif(24), prior = ~ age,
initdata = balance)
fm <- fit(mod, verbose = FALSE, emc = em.control(rand = FALSE))
fm
summary(fm, which = "prior")
citation("stats")
sessionInfo()
#install.packages("pacman")
pacman::p_load("here", "tidyverse", "scales", "maEndToEnd", "pd.mogene.2.0.st", "oligo")
setwd("C:/Users/liber/Desktop/Study/Genomics UA/RNA-seq analysis with R/Lesson_6_Intro_to_R")
#install.packages("pacman")
pacman::p_load("here", "tidyverse", "scales", "maEndToEnd", "pd.mogene.2.0.st", "oligo")
i_am("02_classes/06_differential_expression/01_distribution_and_tools.Rmd")
library(SeuratData)
BiocManager::install(c("SeuratData", "SeuratDisk"))
BiocManager::install("sceasy")
devtools::install_github("cellgeni/sceasy")
library(LoomExperiment)
BiocManager::install(c("LoomExperiment", "SingleCellExperiment"))
conda install anndata -c bioconda
#initial settings
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
#load required libraries
library(sceasy)
library(reticulate)
use_condaenv('GenomicsUA')
#initial settings
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
use_condaenv('GenomicsUA')
conda env info
reticulate::import("loompy")
install.packages('reticulate')
data_path <- paste("..//..//hard_data//GSE129308//unpacked_tar")
file_list <- list.files(data_path, all.files = T)
file_list <- list.files(data_path, all.files = T, full.names = T)
file_list <- list.files(paste(data_path, "unpacked_tar", sep = ""), all.files = T, full.names = T)
file_list <- list.files(data_path, all.files = T, full.names = T)
data_path <- paste("..//..//hard_data//GSE129308//")
data_path <- paste("..//..//hard_data//GSE129308//")
file_list <- list.files(paste(data_path, "raw_data", sep = ""), all.files = T, full.names = T)
file_list[1]
file_list <- list.files(paste(data_path, "raw_data//", sep = ""), all.files = T, full.names = T)
paste(data_path, "raw_data//", sep = "")
data_path <- paste("..//..//hard_data//GSE129308//")
file_list(data_path)
list.files(data_path)
list.files(paste(data_path, "raw_data//", sep = ""))
file_list <- list.files(paste(data_path, "raw_data//", sep = ""), all.files = T, full.names = T)
file_list
file_list <- list.files(paste(data_path, "raw_data//", sep = ""), all.files = T, full.names = T)[-1:2]
file_list <- file_list[!1:2]
file_list
file_list <- list.files(paste(data_path, "raw_data//", sep = ""), all.files = T, full.names = T)
file_list[1]
file_list[!1]
file_list[-1]
file_list[-c(1,2)]
mkdir(paste(data_path, "seurat_data"))
dir.create(paste(data_path, "seurat_data"))
for (filename in file_list){
sceasy::convertFormat(paste(data_path, "raw_data//", filename, sep = ""), from="anndata", to="seurat",
outFile=paste(data_path, "seurat_data//", filename, '.rds', sep = ""))
}
packageVersion(reticulate)
library(reticulate)
packageVersion(reticulate)
version()
reticulate::use_condaenv("GenomicsUA", required = TRUE)
loompy <- reticulate::import('loompy')
filename <- file_list[1]
sceasy::convertFormat(paste(data_path, "raw_data//", filename, sep = ""), from="anndata", to="seurat",
outFile=paste(data_path, "seurat_data//", filename, '.rds', sep = ""))
use_condaenv('GenomicsUA')
loompy <- reticulate::import('loompy')
library(reticulate)
loompy <- reticulate::import('loompy')
library(sceasy)
library(reticulate)
library(sceasy)
use_condaenv('GenomicsUA')
loompy <- reticulate::import('loompy')
library(sceasy)
library(reticulate)
use_condaenv('GenomicsUA')
loompy <- reticulate::import('loompy')
sessionInfo()
devtools::install_github('satijalab/seurat-data')
library(Seurat)
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("mojaveazure/seurat-disk")
library(SeuratDisk)
library(Seurat)
library(SeuratDisk)
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
data_path <- paste("..//..//hard_data//GSE129308//")
file_list <- list.files(paste(data_path, "raw_data//", sep = ""), all.files = T, full.names = T)
file_list <- file_list[-c(1:2)] #drop /. and /..
dir.create(paste(data_path, "seurat_data"))
?Convert
filename <- file_list[1]
# sceasy::convertFormat(paste(data_path, "raw_data//", filename, sep = ""), from="anndata", to="seurat",
#                       outFile=paste(data_path, "seurat_data//", filename, '.rds', sep = ""))
Convert(paste(data_path, "raw_data//", filename, sep = ""), dest = "h5seurat", overwrite = F)
# sceasy::convertFormat(paste(data_path, "raw_data//", filename, sep = ""), from="anndata", to="seurat",
#                       outFile=paste(data_path, "seurat_data//", filename, '.rds', sep = ""))
Convert(filename, dest = "h5seurat", overwrite = F)
install.packages(preprocessing)
Read10X(filename)
filename
wd()
getwd()
Read10X("..//..//hard_data//GSE129308//raw_data//")
Read10X("..//..//hard_data//GSE129308//")
# sceasy::convertFormat(paste(data_path, "raw_data//", filename, sep = ""), from="anndata", to="seurat",
#                       outFile=paste(data_path, "seurat_data//", filename, '.rds', sep = ""))
Convert(filename, dest = "h5seurat", overwrite = F)
filename
foo <- "..//..//hard_data//GSE129308//raw_data//"
Convert(foo, dest = "h5seurat", overwrite = F)
# sceasy::convertFormat(paste(data_path, "raw_data//", filename, sep = ""), from="anndata", to="seurat",
#                       outFile=paste(data_path, "seurat_data//", filename, '.rds', sep = ""))
Convert(filename, dest = "h5seurat", overwrite = F)
Read10X_h5(filename)
foo <- Read10X_h5(filename)
View(foo)
str(foo)
foo@i
View(foo@i)
View(foo@p)
View(foo@Dim)
View(foo@Dimnames)
View(foo@x)
View(foo@factors)
summary(foo@x)
unique(foo@x)
names(foo@x)
str(foo)
bar <- as.matrix(foo)
View(bar)
for (filename in file_list){
foo <- Read10X_h5(filename)
saveRDS(foo, file = paste(data_path, "seurat_data//", filename, ".rds", sep = ""))
}
filename <- file_list[1]
foo <- Read10X_h5(filename)
saveRDS(foo, file = paste(data_path, "seurat_data//", filename, ".rds", sep = ""))
file_list <- list.files(paste(data_path, "raw_data//", sep = ""), all.files = T, full.names = F)
file_list <- file_list[-c(1:2)] #drop /. and /..
filename <- file_list[1]
foo <- Read10X_h5(paste(data_path, "raw_data//", filename, sep = ""))
saveRDS(foo, file = paste(data_path, "seurat_data//", filename, ".rds", sep = ""))
filename
saveRDS(foo, file = paste(filename, ".rds", sep = ""))
for (filename in file_list){
foo <- Read10X_h5(paste(data_path, "raw_data//", filename, sep = ""))
saveRDS(foo, file = paste(data_path, "seurat_data//", filename, ".rds", sep = ""))
}
for (filename in file_list){
foo <- Read10X_h5(paste(data_path, "raw_data//", filename, sep = ""))
saveRDS(foo, file = paste(data_path, "seurat_data//", filename, ".rds", sep = ""))
print("+")
}
foo <- Read10X_h5(paste(data_path, "raw_data//", filename, sep = ""))
saveRDS(foo, file = paste(data_path, "seurat_data//", filename, ".rds", sep = ""))
for (filename in file_list){
foo <- Read10X_h5(paste(data_path, "raw_data//", filename, sep = ""))
saveRDS(foo, file = paste("C:\\Users\\liber/Desktop\\", filename, ".rds", sep = ""))
print("+")
}
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
in_dir <- "..\\..\\hard_data\\GSE129308\\in_data"
out_dir <- "..\\..\\hard_data\\GSE129308\\seurat_data"
in_files <- list.files(in_dir, full.names = T)
filename <- in_files[1]
#read the file
experiment <- readRDS(filename)
foo <- as.matrix(experiment)
View(foo)
foo <- NULL
#read the file
experiment <- as.matrix(readRDS(filename))
View(experiment)
metadata_rownames <- rownames(experiment)
library(Matrix)
library(Seurat)
?CreateSeuratObject
library(patchwork)
#read the file
experiment <- as.matrix(readRDS(filename))
#prepare metadata
metadata_rownames <- rownames(experiment)
##check if control or sample for condition selection
if (grepl("Control", filename)){
condition <- rep("Control", length(metadata_rownames))
} else {
condition <- rep("MAP2", length(metadata_rownames))
}
#combine metadata into a data.frame
metadata_df <- data.frame(row.names = metadata_rownames,
condition = condition)
View(metadata_df)
i
i
i
library(Seurat)
library(SeuratData)
library(patchwork)
# install dataset
InstallData("ifnb")
devtools::install_github('satijalab/seurat-data')
devtools::install_github('satijalab/seurat-data')
library(Matrix)
library(Seurat)
library(patchwork)
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
in_dir <- "..\\..\\hard_data\\GSE129308\\in_data"
out_dir <- "..\\..\\hard_data\\GSE129308\\seurat_data"
in_files <- list.files(in_dir, full.names = T)
seurat_list <- list()
for (filename in in_files){
#read the file
experiment <- as.matrix(readRDS(filename))
#prepare metadata
metadata_rownames <- rownames(experiment)
##check if control or sample for condition selection
if (grepl("Control", filename)){
condition <- rep("Control", length(metadata_rownames))
} else {
condition <- rep("MAP2", length(metadata_rownames))
}
#combine metadata into a data.frame
metadata_df <- data.frame(row.names = metadata_rownames,
condition = condition)
#'add the seurat file to @seurat_list
seurat_object <- CreateSeuratObject(counts = experiment, meta.data = metadata_df)
seurat_list[filename] <- seurat_object
}
View(seurat_list)
foo <- NormalizeData(seurat_list)
foo <- NormalizeData(seurat_list[1])
View(seurat_object)
View(seurat_list)
seurat_list[["..\..\hard_data\GSE129308\in_data/GSM3704357_1-MAP2_filtered_feature_bc_matrix.h5.rds"]]
in_files_short <- list.files(in_dir, full.names = F)
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
in_dir <- "..\\..\\hard_data\\GSE129308\\in_data"
out_dir <- "..\\..\\hard_data\\GSE129308\\seurat_data"
in_files <- list.files(in_dir, full.names = T)
in_files_short <- list.files(in_dir, full.names = F)
filename
?gsub
library(Matrix)
library(Seurat)
library(patchwork)
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
in_dir <- "..\\..\\hard_data\\GSE129308\\in_data"
out_dir <- "..\\..\\hard_data\\GSE129308\\seurat_data"
in_files <- list.files(in_dir, full.names = T)
seurat_list <- list()
for (filename in in_files){
#read the file
experiment <- as.matrix(readRDS(filename))
#prepare metadata
metadata_rownames <- rownames(experiment)
##check if control or sample for condition selection
if (grepl("Control", filename)){
condition <- rep("Control", length(metadata_rownames))
} else {
condition <- rep("MAP2", length(metadata_rownames))
}
#combine metadata into a data.frame
metadata_df <- data.frame(row.names = metadata_rownames,
condition = condition)
#make a nice name for the list element
list_element_name <- sub("..\\..\\hard_data\\GSE129308\\in_data/", "", filename)
list_element_name <- sub(".rds", "", list_element_name)
#'add the seurat file to @seurat_list
seurat_object <- CreateSeuratObject(counts = experiment, meta.data = metadata_df)
seurat_list[list_element_name] <- seurat_object
}
View(seurat_list)
#make a nice name for the list element
list_element_name <- sub("..\\..\\hard_data\\GSE129308\\in_data/", "", filename)
sub("..\\..\\hard_data\\GSE129308\\in_data/", "", "filename")
sub("..\\..\\hard_data\\GSE129308\\in_data/", "", filename)
gsub("..\\..\\hard_data\\GSE129308\\in_data/", "", filename)
gsub(".*/","", filename)
#make a nice name for the list element
list_element_name <- gsub(".*/","", filename)
list_element_name <- sub(".rds", "", list_element_name)
list_element_name
#make a nice name for the list element
list_element_name <- gsub(".*/","", filename)
list_element_name <- sub("h5.rds", "", list_element_name)
list_element_name
#make a nice name for the list element
list_element_name <- gsub(".*/","", filename)
list_element_name <- sub(".h5.rds", "", list_element_name)
list_element_name
library(Matrix)
library(Seurat)
library(patchwork)
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
in_dir <- "..\\..\\hard_data\\GSE129308\\in_data"
out_dir <- "..\\..\\hard_data\\GSE129308\\seurat_data"
in_files <- list.files(in_dir, full.names = T)
seurat_list <- list()
for (filename in in_files){
#read the file
experiment <- as.matrix(readRDS(filename))
#prepare metadata
metadata_rownames <- rownames(experiment)
##check if control or sample for condition selection
if (grepl("Control", filename)){
condition <- rep("Control", length(metadata_rownames))
} else {
condition <- rep("MAP2", length(metadata_rownames))
}
#combine metadata into a data.frame
metadata_df <- data.frame(row.names = metadata_rownames,
condition = condition)
#make a nice name for the list element
list_element_name <- gsub(".*/","", filename)
list_element_name <- sub(".h5.rds", "", list_element_name)
#'add the seurat file to @seurat_list
seurat_object <- CreateSeuratObject(counts = experiment, meta.data = metadata_df)
seurat_list[list_element_name] <- seurat_object
}
View(seurat_object)
foo <- NormalizeData(seurat_list[1])
foo <- NormalizeData(seurat_list[[1]])
foo
foo <- NormalizeData(seurat_list)
foo <- NULL
seurat_object <- NULL
seurat_object <- NA
seurat_list <- lapply(seurat_list, NormalizeData(x))
seurat_list <- lapply(seurat_list, NormalizeData(seurat_list))
seurat_list <- lapply(seurat_list, NormalizeData())
seurat_list <- lapply(seurat_list, NormalizeData)
in_files <- list.files(in_dir, full.names = T)
seurat_list <- list()
for (filename in in_files){
#read the file
experiment <- as.matrix(readRDS(filename))
#prepare metadata
metadata_rownames <- rownames(experiment)
##check if control or sample for condition selection
if (grepl("Control", filename)){
condition <- rep("Control", length(metadata_rownames))
} else {
condition <- rep("MAP2", length(metadata_rownames))
}
#combine metadata into a data.frame
metadata_df <- data.frame(row.names = metadata_rownames,
condition = condition)
#make a nice name for the list element
list_element_name <- gsub(".*/","", filename)
list_element_name <- sub(".h5.rds", "", list_element_name)
#'add the seurat file to @seurat_list
seurat_object <- CreateSeuratObject(counts = experiment, meta.data = metadata_df)
seurat_list[list_element_name] <- seurat_object
}
seurat_list <- lapply(seurat_list, NormalizeData)
seurat_list <- lapply(seurat_list, FindVariableFeatures)
seurat_list <- lapply(seurat_list, ScaleData)
seurat_list <- lapply(seurat_list, RunPCA)
seurat_list <- lapply(seurat_list, FindNeighbors(dims = 1:30, reduction = "pca"))
seurat_list <- lapply(seurat_list, FindNeighbors, dims = 1:30, reduction = "pca")
seurat_list <- lapply(seurat_list, FindClusters, resolution = 2,
cluster.name = "unintegrated_clusters")
seurat_list <- lapply(seurat_list, RunUMAP, dims = 1:30, reduction = "pca",
reduction.name = "umap.unintegrated")
lapply(seurat_list, DimPlot, reduction = "umap.unintegrated",
group.by = c("stim", "seurat_clusters"))
View(seurat_object)
head(seurat_object)
View(experiment)
View(seurat_object)
library(Matrix)
library(Seurat)
library(patchwork)
setwd("C:\\Users\\liber\\Desktop\\Study\\Genomics UA\\RNA-seq analysis with R\\Group Project")
in_dir <- "..\\..\\hard_data\\GSE129308\\in_data"
out_dir <- "..\\..\\hard_data\\GSE129308\\seurat_data"
in_files <- list.files(in_dir, full.names = T)
seurat_list <- list()
head(metadata_rownames)
seurat_object$orig.ident
seurat_object@assays$RNA
head(seurat_object)
filename <- in_files
#read the file
experiment <- as.matrix(readRDS(filename))
filename
filename <- in_files[1]
#read the file
experiment <- as.matrix(readRDS(filename))
#prepare metadata
metadata_rownames <- colnames(experiment)
##check if control or sample for condition selection
if (grepl("Control", filename)){
condition <- rep("Control", length(metadata_rownames))
} else {
condition <- rep("MAP2", length(metadata_rownames))
}
#combine metadata into a data.frame
metadata_df <- data.frame(row.names = metadata_rownames,
condition = condition)
View(metadata_df)
View(metadata_df)
#make a nice name for the list element
list_element_name <- gsub(".*/","", filename)
list_element_name <- sub(".h5.rds", "", list_element_name)
#'add the seurat file to @seurat_list
seurat_object <- CreateSeuratObject(counts = experiment, meta.data = metadata_df)
View(seurat_object)
head(seurat_object)
